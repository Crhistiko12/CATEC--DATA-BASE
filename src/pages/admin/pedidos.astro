---
import BaseLayout from "../../layouts/BaseLayout.astro";
---
<BaseLayout>
  <section class="container mx-auto px-4 py-10">
    <div class="flex items-center justify-between mb-6">
      <h1 class="text-2xl md:text-3xl font-bold">Panel de pedidos</h1>
      <div class="text-sm text-gray-600">Estados: pendiente → enviado → entregado</div>
    </div>

    <div id="state-loading" class="flex items-center gap-3 text-orange-600">
      <svg class="animate-spin h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor"><circle cx="12" cy="12" r="10" stroke-width="4" class="opacity-25"/><path d="M4 12a8 8 0 018-8" stroke-width="4" class="opacity-75"/></svg>
      <p class="font-semibold">Cargando pedidos...</p>
    </div>

    <div id="state-error" class="hidden bg-red-50 text-red-700 border border-red-200 rounded-lg p-4"></div>

    <div id="content" class="hidden">
      <div class="overflow-x-auto bg-white rounded-xl shadow">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Orden</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cliente</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
              <th class="px-4 py-3"></th>
            </tr>
          </thead>
          <tbody id="rows" class="bg-white divide-y divide-gray-200"></tbody>
        </table>
      </div>
    </div>
  </section>

  <script type="module">
    import { listOrders, updateOrderStatus } from "../../js/orders.js";

    const $ = (s) => document.querySelector(s);

    function showError(msg) {
      $("#state-loading").classList.add("hidden");
      const box = $("#state-error");
      box.textContent = msg;
      box.classList.remove("hidden");
    }

    function badge(status) {
      const base = "inline-flex items-center px-2 py-0.5 rounded text-xs font-semibold";
      const map = {
        pendiente: `${base} bg-yellow-100 text-yellow-800`,
        enviado: `${base} bg-blue-100 text-blue-800`,
        entregado: `${base} bg-green-100 text-green-800`,
        cancelado: `${base} bg-red-100 text-red-800`,
      };
      return `<span class="${map[status] || base}">${status}</span>`;
    }

    function actionButtons(order) {
      const next = { pendiente: "enviado", enviado: "entregado" }[order.status];
      const btnBase = "px-3 py-1 rounded text-sm font-semibold transition-colors";
      const edit = next
        ? `<button data-id="${order.id}" data-next="${next}" class="btn-next ${btnBase} bg-orange-500 text-white hover:bg-orange-400">Marcar ${next}</button>`
        : "";
      const cancel = order.status === "pendiente"
        ? `<button data-id="${order.id}" data-next="cancelado" class="btn-next ${btnBase} bg-gray-900 text-white hover:bg-gray-800 ml-2">Cancelar</button>`
        : "";
      return `${edit}${cancel}`;
    }

    function formatDate(iso) {
      try { return new Date(iso).toLocaleString(); } catch { return iso || "-"; }
    }

    async function load() {
      try {
        const orders = await listOrders();
        render(orders);
      } catch (e) {
        showError(e.message || "No se pudieron cargar los pedidos");
      }
    }

    function render(orders) {
      $("#state-loading").classList.add("hidden");
      $("#content").classList.remove("hidden");

      const tbody = $("#rows");
      tbody.innerHTML = "";
      orders.forEach((o) => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
          <td class="px-4 py-3 text-sm font-semibold text-gray-900">#${o.id}</td>
          <td class="px-4 py-3 text-sm text-gray-700">${o.customer_name || "-"}<div class="text-xs text-gray-500">${o.customer_email || ""}</div></td>
          <td class="px-4 py-3 text-sm text-gray-700">${formatDate(o.created_at)}</td>
          <td class="px-4 py-3 text-sm font-semibold text-gray-900">Bs ${Number(o.total_amount || 0).toFixed(2)}</td>
          <td class="px-4 py-3">${badge(o.status)}</td>
          <td class="px-4 py-3 text-right">${actionButtons(o)}</td>
        `;
        tbody.appendChild(tr);
      });

      tbody.querySelectorAll(".btn-next").forEach((btn) => {
        btn.addEventListener("click", async (e) => {
          const id = e.currentTarget.getAttribute("data-id");
          const next = e.currentTarget.getAttribute("data-next");
          e.currentTarget.disabled = true;
          e.currentTarget.classList.add("opacity-60");
          try {
            await updateOrderStatus(id, next);
            await load();
          } catch (err) {
            alert(err.message || "No se pudo actualizar el estado");
          } finally {
            e.currentTarget.disabled = false;
            e.currentTarget.classList.remove("opacity-60");
          }
        });
      });
    }

    load();
  </script>
</BaseLayout>
